using System;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel;
using System.Collections.ObjectModel;
using System.Windows.Data;
using System.Collections.Specialized;
using Cinch;

namespace ViewModels
{
	/// <summary>
	///NOTE : This class was auto generated by a tool
	///Edit this code at your peril!!!!!!
	/// </summary>
	public partial class ViewModelA : Cinch.ViewModelBase
	{
		#region Data
		private Int64 counters;
		//callbacks to allow auto generated part to notify custom part, when property changes
		private Dictionary<String, Action> autoPartPropertyCallBacks = new Dictionary<String, Action>();
		#endregion


		#region Public Properties
		#region Counters
		/// <summary>
		/// Counters
		/// </summary>
		static PropertyChangedEventArgs countersChangeArgs =
			ObservableHelper.CreateArgs<ViewModelA>(x => x.Counters);


		public Int64 Counters
		{
			get { return counters; }
			set
			{
				counters = value;
				NotifyPropertyChanged(countersChangeArgs);
				//Use callback to provide non auto generated part of partial
				//class with notification, when an auto generated property value changes
				Action callback = null;
				if (autoPartPropertyCallBacks.TryGetValue(
				    countersChangeArgs.PropertyName, out callback))
				{
				    callback();
				}
			}
		}
		#endregion

		#endregion
	}
}
