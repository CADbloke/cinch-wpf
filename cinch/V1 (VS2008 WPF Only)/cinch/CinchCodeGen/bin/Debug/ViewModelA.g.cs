using System;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel;
using System.Collections.ObjectModel;
using System.Windows.Data;
using System.Collections.Specialized;
using Cinch;

namespace viewmodels
{
	/// <summary>
	///NOTE : This class was auto generated by a tool
	///Edit this code at your peril!!!!!!
	/// </summary>
	public partial class sameVM : Cinch.ViewModelBase
	{
		#region Data
		private Cinch.DataWrapper<Decimal> personA;
		private Cinch.DataWrapper<Int32> personB;
		//callbacks to allow auto generated part to notify custom part, when property changes
		private Dictionary<String, Action> autoPartPropertyCallBacks = new Dictionary<String, Action>();
		#endregion


		#region Public Properties
		#region PersonA
		/// <summary>
		/// PersonA
		/// </summary>
		static PropertyChangedEventArgs personAChangeArgs =
			ObservableHelper.CreateArgs<sameVM>(x => x.PersonA);


		public Cinch.DataWrapper<Decimal> PersonA
		{
			get { return personA; }
			private set
			{
				personA = value;
				NotifyPropertyChanged(personAChangeArgs);
				//Use callback to provide non auto generated part of partial
				//class with notification, when an auto generated property value changes
				Action callback = null;
				if (autoPartPropertyCallBacks.TryGetValue(
				    personAChangeArgs.PropertyName, out callback))
				{
				    callback();
				}
			}
		}
		#endregion

		#region PersonB
		/// <summary>
		/// PersonB
		/// </summary>
		static PropertyChangedEventArgs personBChangeArgs =
			ObservableHelper.CreateArgs<sameVM>(x => x.PersonB);


		public Cinch.DataWrapper<Int32> PersonB
		{
			get { return personB; }
			private set
			{
				personB = value;
				NotifyPropertyChanged(personBChangeArgs);
				//Use callback to provide non auto generated part of partial
				//class with notification, when an auto generated property value changes
				Action callback = null;
				if (autoPartPropertyCallBacks.TryGetValue(
				    personBChangeArgs.PropertyName, out callback))
				{
				    callback();
				}
			}
		}
		#endregion

		#endregion
	}
}
